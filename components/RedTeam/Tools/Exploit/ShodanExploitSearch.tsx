"use client";

import React, { useState } from "react";

type Props = {};

export default function ShodanExploitSearch({}: Props) {
  const [loading, setLoading] = useState(false);
  const [resultMessage, setResultMessage] = useState("");
  const [exploitData, setExploitData] = useState([]);
  const [searchQuery, setSearchQuery] = useState("");

  const handleExploitSearch = async () => {
    setLoading(true);

    try {
      const data = {
        searchQuery: searchQuery,
      };

      const res = await fetch("/api/exploit/shodan", {
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        method: "POST",
        body: JSON.stringify(data),
      });
      const result = await res.json();
      if (res.ok) {
        console.log("OK");
        console.log(result.body.matches);
        setExploitData(result.body.matches);

        if (
          result.body.result === undefined ||
          result.body.result.length == 0
        ) {
          setResultMessage("Nothing Found...Contact Admin");
        } else {
          setResultMessage("");
        }
      }
    } catch {
      console.log("Scan Failed");
    }

    setLoading(false);
  };

  return (
    <div className="p-4">
      <div className="">
        <h1 className="text-4xl text-white">Exploit Search</h1>
      </div>
      <div className="max-w-lg  py-2">
        <label className="input input-bordered flex items-center gap-2">
          <input
            type="text"
            className="grow"
            placeholder="Exploit Search"
            value={searchQuery}
            onChange={(event) => setSearchQuery(event.target.value)}
          />
        </label>
      </div>

      <div>
        <button
          className="btn btn-outline btn-error"
          onClick={handleExploitSearch}
        >
          Exploit Search
        </button>
      </div>

      <div className="py-2">
        <div className="overflow-x-auto">
          <table className="table table-zebra bg-black">
            {/* Table Heading */}
            <thead>
              <tr>
                <th></th>
                <th>ID</th>
                <th>Author</th>
                <th>Date</th>
                <th>Description</th>
                <th>Platform</th>
                <th>Port</th>
                <th>Source</th>
                <th>Type</th>
                <th>Display Code</th>
              </tr>
            </thead>
            <tbody>
              {/* Table Items */}
              {exploitData &&
                exploitData.map((exploit, index) => (
                  <tr key={index}>
                    <th>{index}</th>
                    <td>{exploit._id}</td>
                    <td>{exploit.author || "None"}</td>
                    <td>{exploit.date || "None"}</td>
                    <td>{exploit.description}</td>
                    <td>{exploit.platform || "None"}</td>
                    <td>{exploit.port || "None"}</td>
                    <td>{exploit.source || "None"}</td>
                    <td>{exploit.type || "None"}</td>
                    <td>
                      <label
                        htmlFor={`my_modal_${exploit._id}`}
                        className="btn"
                      >
                        Display Code
                      </label>
                      <input
                        type="checkbox"
                        id={`my_modal_${exploit._id}`}
                        className="modal-toggle"
                      />
                      <div className="modal" role="dialog">
                        <div className="modal-box">
                          <h3 className="text-lg font-bold py-2">
                            Code Displayed
                          </h3>

                          <div className="mockup-code bg-black text-white px-4">
                            <pre>
                              <code>{exploit.code || "None"}</code>
                            </pre>
                          </div>

                          <div className="modal-action">
                            <label
                              htmlFor={`my_modal_${exploit._id}`}
                              className="btn"
                            >
                              Close!
                            </label>
                          </div>
                        </div>
                      </div>
                    </td>
                  </tr>
                ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}
